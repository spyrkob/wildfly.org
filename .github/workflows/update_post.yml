name: "Update the blog post's date"

on:
  workflow_dispatch:
    inputs:
      PR_NUM:
        description: "PR ID to amend. Leave empty to perform changes on the main branch."
        required: false
      post_name:
        description: "Blog post name to amend"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Clone git repository
        uses: actions/checkout@v4
        with:
          ref: "main"
      - name: Update the date of ${{ github.event.inputs.post_name }}
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          set -e

          readonly OLD_POST="${{ github.event.inputs.post_name }}"
          readonly ORIGINAL_PR="${{ github.event.inputs.PR_NUM }}"
          readonly NEW_DATE="$(date '+%Y-%m-%d')"

          # checkout PR if provided
          if [ "${ORIGINAL_PR}" != '' ]; then
            echo "Checking out PR${ORIGINAL_PR}"
            gh pr checkout "${ORIGINAL_PR}" --repo spyrkob/wildfly.org
          else
            echo "Using branch main"
          fi

          if [ ! -f "_posts/${OLD_POST}" ]; then
            echo "Blog post ${OLD_POST} not found"
            exit 1
          fi

          readonly OLD_DATE=$(echo ${OLD_POST} | sed -E "s/([0-9]{4}\-[0-9]{2}\-[0-9]{2}).*/\1/")

          echo "Replacing ${OLD_DATE} in the blog post"
          sed -E -i "s/date:( *)${OLD_DATE}/date:\1${NEW_DATE}/"  "_posts/${OLD_POST}"

          readonly NEW_POST="${NEW_DATE}"`echo "${OLD_POST}" | sed -E "s/[0-9]{4}\-[0-9]{2}\-[0-9]{2}//"`
          echo "Renaming the ${OLD_POST} to ${NEW_POST}"

          git mv _posts/${OLD_POST} _posts/${NEW_POST}

          readonly FIX_BRANCH="fix_pr_${ORIGINAL_PR:=main}"
          echo "Creating a new branch: "
          git checkout -b "${FIX_BRANCH}"

          echo "Committing changes and creating update PR"
          git config --global user.name "Wildfly.org CI"
          git config --global user.email "wildfly-dev@lists.jboss.org"
          git commit -am "Update ${OLD_POST} blog date"

          # TODO: remove me
          git remote -v
          git push --set-upstream spyrkob "${FIX_BRANCH}"

          PR_TITLE=""
          SOURCE_LINK=""
          if [ "${ORIGINAL_PR}" == '' ]; then
            SOURCE_LINK="$(gh browse -b main -n --repo spyrkob/wildfly.org)"
            PR_TITLE="Update date of post: ${OLD_POST}"
          else 
            SOURCE_LINK="#{ORIGINAL_PR}"
            PR_TITLE="Update date of PR: $(gh pr view 1 --repo spyrkob/wildfly.org --json title --jq '.title')"
          fi

          gh pr create --title "${PR_TITLE}"\
          --body "Date update for ${OLD_POST} from ${SOURCE_LINK} "\
          --repo spyrkob/wildfly.org
